---
- name: Deploy Node.js Chat App on Local EC2
  hosts: localhost
  connection: local
  become: yes
  vars:
    app_dir: /home/ec2-user/chatapp
    repo_url: https://github.com/bodukal/chatapp.git
  tasks:
    - name: Update all packages
      yum:
        name: "*"
        state: latest

    - name: Install Node.js
      shell: |
        curl -fsSL https://rpm.nodesource.com/setup_18.x | bash -
        yum install -y nodejs
      args:
        creates: /usr/bin/node

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present

    - name: Clone repo if not present
      git:
        repo: "{{ repo_url }}"
        dest: "{{ app_dir }}"
        version: main
        force: yes

    - name: Install app dependencies
      npm:
        path: "{{ app_dir }}"
        state: present

    - name: Start app with PM2
      shell: pm2 start {{ app_dir }}/src/app.js --name chatapp || pm2 restart chatapp
      args:
        chdir: "{{ app_dir }}"
      register: pm2_start
      ignore_errors: yes

    - name: Save PM2 process list and enable startup
      shell: |
        pm2 save
        pm2 startup systemd -u ec2-user --hp /home/ec2-user
      when: pm2_start is changed

    - name: Install Nginx
      yum:
        name: nginx
        state: present

    - name: Configure Nginx reverse proxy
      copy:
        dest: /etc/nginx/nginx.conf
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;

          events {
              worker_connections 1024;
          }

          http {
              log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

              access_log /var/log/nginx/access.log main;

              sendfile on;
              tcp_nopush on;
              tcp_nodelay on;
              keepalive_timeout 65;
              types_hash_max_size 2048;

              include /etc/nginx/mime.types;
              default_type application/octet-stream;

              server {
                  listen 80;
                  server_name _;

                  location / {
                      proxy_pass http://localhost:3000;
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection 'upgrade';
                      proxy_set_header Host $host;
                      proxy_cache_bypass $http_upgrade;
                  }
              }
          }
      notify: reload nginx

  handlers:
    - name: reload nginx
      systemd:
        name: nginx
        state: restarted

